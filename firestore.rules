rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Departments collection rules
    match /departments/{departmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
      
      // Department members subcollection
      match /members/{memberId} {
        allow read: if request.auth != null && (request.auth.uid == memberId || isAdmin() || isInDepartment(departmentId));
        allow write: if request.auth != null && isAdmin();
      }
    }
    
    // Inventory items collection
    match /inventoryItems/{itemId} {
      // Anyone authenticated can read
      allow read: if request.auth != null;

      // Only admins can create or update, with mandatory fields
      allow create, update: if request.auth != null && isAdmin()
        && request.resource.data.sapCode is string
        && request.resource.data.name is string
        && request.resource.data.category is string
        && request.resource.data.subCategory is string
        && request.resource.data.location is string
        // supplier field is optional but must be string if present
        && ( !('supplier' in request.resource.data) || request.resource.data.supplier is string );

      // Only admins can delete
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Helper functions
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isInDepartment(departmentId) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == departmentId;
    }
  }
}